#===============================================================================
# ■ [VA] 记忆事件位置
#    [VA] RememberWorld
#-------------------------------------------------------------------------------
#    让RGSS3记住事件移动后的位置。
#    
#-------------------------------------------------------------------------------
#    更新作者： DeathKing
#    许可协议： FSL
#    项目版本： 1.1.0726
#    最后更新： 2014-07-26
#    引用网址：
#-------------------------------------------------------------------------------
#    能让RGSS3记忆住NPC的移动位置，避免出现地图切换后NPC又回到了初始位置的尴尬。
#
#    目前这个版本只是简单的记忆了事件的X、Y坐标，并写入Game_System的map_events中，  
#    事实上，可能还需要写入更多的信息，但是具体要写入什么，我正在探索中。
#-------------------------------------------------------------------------------
#    - 1.1.0726 By DeathKing
#      * 使用Game_System作为载体，避免对地图文件本身做出修改。
#
#    - 1.0.0725 By DeathKing
#      * 初始版本完成；
#
#===============================================================================
$fscript ||= {}
$fscript["RememberWorld"] = "1.1.0726"

#-------------------------------------------------------------------------------
# ▼ 登记FSL
#-------------------------------------------------------------------------------
module FSL
  module RememberWorld
    
    # 控制开关编号
    # 当 ENABLE_SWITCH 号开关打开时，此功能有效
    ENABLE_SWITCH = 21
    
    # 不要记录标记
    # 如果事件的当前事件页第一条指令为一个注释，而且包含有下面的字符串的话
    # 脚本那不记住事件位置。
    NOT_REMEMBER_MARK = "<FSL::RememberWorld not-track>"
    
  end
end

#==============================================================================
# ■ Game_System
#------------------------------------------------------------------------------
# 　处理系统附属数据的类。保存存档和菜单的禁止状态之类的数据。
#   本类的实例请参考 $game_system 。
#==============================================================================

class Game_System
  #--------------------------------------------------------------------------
  # ● 开放map_events实例变量
  #--------------------------------------------------------------------------
  def map_events
    @map_events ||= {}
    @map_events
  end
end

#==============================================================================
# ■ Game_Event
#------------------------------------------------------------------------------
# 　处理事件的类。拥有条件判断、事件页的切换、并行处理、执行事件等功能。
#   在 Game_Map 类的内部使用。
#==============================================================================
class Game_Event < Game_Character
  #--------------------------------------------------------------------------
  # ● 定义实例变量
  #--------------------------------------------------------------------------
  attr_reader   :event
end

#==============================================================================
# ■ Game_Map
#------------------------------------------------------------------------------
# 　管理地图的类。拥有卷动地图以及判断通行度的功能。
#   本类的实例请参考 $game_map 。
#==============================================================================
class Game_Map
  
  include FSL::RememberWorld
  
  #--------------------------------------------------------------------------
  # ● 定义实例变量
  #--------------------------------------------------------------------------
  def remember_world
    saved = {}
    if $game_switches[ENABLE_SWITCH]
      @events.each do |i, event|
        # 跳过那些指明不要记住的事件
        instruction = event.find_proper_page.list.first
        next if (instruction and
                 instruction.code == 108 and
                 instruction.parameters[0].include? NOT_REMEMBER_MARK)
        saved[i] = [event.x, event.y] 
      end
      $game_system.map_events[@map_id] = saved
    end
  end
  
  #--------------------------------------------------------------------------
  # ● 设置事件
  #--------------------------------------------------------------------------
  alias old_rm_setup_events setup_events
  def setup_events
    old_rm_setup_events 
    if (events = $game_system.map_events[@map_id])
      events.each do |id, coordinate|
        @events[id].moveto(*coordinate)
      end
    end
  end
end

#==============================================================================
# ■ Scene_Map
#------------------------------------------------------------------------------
# 　地图画面
#==============================================================================
class Scene_Map
  alias old_rw_pre_transfer pre_transfer
  #--------------------------------------------------------------------------
  # ● 场所移动前的处理
  #--------------------------------------------------------------------------
  def pre_transfer
    old_rw_pre_transfer
    $game_map.remember_world
  end
end
